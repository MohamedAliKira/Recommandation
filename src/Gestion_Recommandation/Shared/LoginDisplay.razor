@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation

@using System.Security.Claims

<AuthorizeView>
    <Authorized>        
        <MudMenu FullWidth="true">
            <ActivatorContent>
                <MudChip Icon="@Icons.Material.Filled.Person" Color="Color.Primary" Direction="Direction.Left" OffsetY="true">
                    Welcome @context.User.FindFirst(ClaimTypes.GivenName).Value !
                </MudChip>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem OnClick="LogOutAsync">LogOut</MudMenuItem>
            </ChildContent>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudButton Variant="Variant.Outlined" Color="Color.Info"
                   StartIcon="@Icons.Material.Filled.Login" OnClick='() => Navigation.NavigateTo("/authentication/login")'>Login</MudButton>
    </NotAuthorized>
</AuthorizeView>


@code {

    private async Task LogOutAsync()
    {
        await Storage.RemoveItemAsync("access_token");
        await Storage.RemoveItemAsync("expiry_date");

        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/authentication/login");
    }
}
